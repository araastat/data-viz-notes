[{"path":"index.html","id":"data-visualization-notes","chapter":"Data Visualization Notes","heading":"Data Visualization Notes","text":"work progress. Last updated: 2022-Mar-01","code":""},{"path":"index.html","id":"preamble","chapter":"Data Visualization Notes","heading":"Preamble","text":"online book compilation lecture notes supplements used various data visualization courses taught years. primary material comes materials ANLY 503 @ Georgetown University, co-developed Marck Vaisman several years. resources include BIOF 439 BIOF 440, courses taught FAES @ NIH.notes distillation several conceptual ideas promoted researchers, graphic designers, journalists data scientists, well experiences. People influenced thinking topic include Jeff Heer, Tamara Munzner, Nathan Yau, Jon Schwabish, excellent teams New York Times, Guardian, Financial Times BBC.Many examples notes reflective efforts greater R Python data visualization communities, especially participants amazing Tidy Tuesdays community activity, students colleagues inspired innovation visual design.","code":""},{"path":"index.html","id":"setting-up-computational-environments","chapter":"Data Visualization Notes","heading":"Setting up computational environments","text":"","code":""},{"path":"index.html","id":"setting-up-r","chapter":"Data Visualization Notes","heading":"Setting up R","text":"","code":""},{"path":"index.html","id":"setting-up-python","chapter":"Data Visualization Notes","heading":"Setting up Python","text":"","code":""},{"path":"index.html","id":"the-anaconda-distribution","chapter":"Data Visualization Notes","heading":"The Anaconda distribution","text":"","code":""},{"path":"index.html","id":"poetry","chapter":"Data Visualization Notes","heading":"poetry","text":"","code":""},{"path":"index.html","id":"pip-venv","chapter":"Data Visualization Notes","heading":"pip + venv","text":"","code":""},{"path":"static-visualizations-ggplot2.html","id":"static-visualizations-ggplot2","chapter":"1 Static visualizations: ggplot2","heading":"1 Static visualizations: ggplot2","text":"","code":""},{"path":"static-visualizations-matplotlib.html","id":"static-visualizations-matplotlib","chapter":"2 Static visualizations: matplotlib","heading":"2 Static visualizations: matplotlib","text":"","code":""},{"path":"dynamic-visualizations-plotly.html","id":"dynamic-visualizations-plotly","chapter":"3 Dynamic visualizations: plotly","heading":"3 Dynamic visualizations: plotly","text":"","code":""},{"path":"dynamic-visualizations-plotly.html","id":"the-r-interface","chapter":"3 Dynamic visualizations: plotly","heading":"3.1 The R interface","text":"","code":""},{"path":"dynamic-visualizations-plotly.html","id":"ggplotly","chapter":"3 Dynamic visualizations: plotly","heading":"3.1.1 ggplotly","text":"","code":""},{"path":"dynamic-visualizations-plotly.html","id":"tooltips","chapter":"3 Dynamic visualizations: plotly","heading":"3.1.1.1 Tooltips","text":"can incorporate format tooltips ggplotly interface. ggplotly\nfunction tooltip option can inhabited aesthetics \nggplot code. default shows aesthetics specified ggplot code.following plot, aesthetics (bill_length_mm, body_mass_g species) displayed tooltips.can specify particular variables display tooltips using tooltips\noption ggplotlyOne can trick ggplotly format tooltip, using text aesthetic. can use\ngeometries text doesn’t effect, can format \naesthetic using R methods, like glue::glue formatIf just try run ggplot2 code, ’ll get warning “Ignoring unknown\naesthetics: text”. ’re taking advantage allow show plot\nprovide tooltip data ggplotly","code":"\npacman::p_load(plotly, ggplot2, palmerpenguins)\nplt <- ggplot(penguins, aes(x = bill_length_mm, y = body_mass_g))+\n    geom_point(aes(color = species)) + \n    labs(x = 'Bill length (mm)', y = 'Body mass (g)', \n         title = 'Penguins')\n\nggplotly(plt)\npacman::p_load(plotly, ggplot2, palmerpenguins)\nplt <- ggplot(penguins, aes(x = bill_length_mm, y = body_mass_g))+\n    geom_point(aes(color = species)) + \n    labs(x = 'Bill length (mm)', y = 'Body mass (g)', \n         title = 'Penguins')\n\nggplotly(plt, tooltip = c('x','y'))\npacman::p_load(plotly, ggplot2, palmerpenguins)\nplt <- ggplot(penguins, aes(x = bill_length_mm, y = body_mass_g))+\n    geom_point(aes(color = species, \n                   text = glue::glue(\"<b>{species}<\/b><br>Body mass: {body_mass_g} g<br>Bill length {bill_length_mm} m\"))) + \n    labs(x = 'Bill length (mm)', y = 'Body mass (g)', \n         title = 'Penguins')\n#> Warning: Ignoring unknown aesthetics: text\n\nggplotly(plt, tooltip = c('text'))"},{"path":"dynamic-visualizations-plotly.html","id":"the-python-interface","chapter":"3 Dynamic visualizations: plotly","heading":"3.2 The Python interface","text":"","code":""},{"path":"dynamic-visualizations-altair.html","id":"dynamic-visualizations-altair","chapter":"4 Dynamic visualizations: altair","heading":"4 Dynamic visualizations: altair","text":"","code":""}]
